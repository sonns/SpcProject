<?php
namespace App\Controller;

use App\Controller\AppController;
use Aura\Intl\Exception;

/**
 * Departments Controller
 *
 * @property \App\Model\Table\DepartmentsTable $Departments
 */
class DepartmentsController extends AuthMasterController
{

    /**
     * Index method
     *
     * @return \Cake\Network\Response|null
     */
    public $paginate = [
        'order' => [
            'Departments.title' => 'asc'
        ],
        'conditions' =>['del_flg' => false]
    ];
    public function  initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    public function index()
    {
        $depart = $this->Departments->newEntity();
        $departments = $this->paginate($this->Departments);
        $this->set(compact('departments'));
        $this->set(compact('depart'));
        $this->set('_serialize', ['departments','depart']);

    }

    /**
     * View method
     *
     * @param string|null $id Department id.
     * @return \Cake\Network\Response|null
     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
     */
    public function view($id = null)
    {
        $department = $this->Departments->get($id, [
            'contain' => []
        ]);

        $this->set('department', $department);
        $this->set('_serialize', ['department']);
    }

    /**
     * Add method
     *
     * @return \Cake\Network\Response|void Redirects on successful add, renders view otherwise.
     */
    public function add()
    {
        $department = $this->Departments->newEntity();
        try{
            if ($this->request->is('post')) {
                $department = $this->Departments->patchEntity($department, $this->request->data);
                $result = [];
                if ($this->Departments->save($department)) {
                    $result = [
                        'status' => 'Success',
                        'response' => __('department_success')
                    ];
                } else {
                    $result = [
                        'status' => 'Error',
                        'response' => __('department_error')
                    ];
                }
            }
        }catch (Exception $e){
//            debug
            $result = [
                'status' => 'Success',
                'response' => $e->getMessage()
            ];
        }

        $this->set(compact('department'));
        $this->set(compact('result'));
        $this->set('_serialize', ['result']);
    }
    /**
     * Edit method
     *
     * @param string|null $id Department id.
     * @return \Cake\Network\Response|void Redirects on successful edit, renders view otherwise.
     * @throws \Cake\Network\Exception\NotFoundException When record not found.
     */
    public function edit($id = null)
    {
        $department = $this->Departments->get($id);
        if ($this->request->is(['patch', 'post', 'put'])) {
            $department = $this->Departments->patchEntity($department, $this->request->data);
            if ($this->Departments->save($department)) {
                $this->Flash->success(__('department_success'));

                return $this->redirect(['action' => 'index']);
            } else {
                $this->Flash->error(__('department_error'));
            }
        }
        $this->set(compact('department'));
        $this->set('_serialize', ['department']);
    }

    public function editAjax()
    {
        $this->request->allowMethod('ajax');
        if (!isset($this->request->data['department_id']) ) {
            throw new NotFoundException();
        }
        $department = $this->Departments->get($this->request->data['department_id']);
        if(empty($department))
        {
            throw new NotFoundException();
        }
        if ($this->request->is(['post'])) {
            $department = $this->Departments->patchEntity($department, $this->request->data);
            if ($this->Departments->save($department)) {
                $result = [
                    'status' => 'Success',
                    'response' => __('department_success')
                ];
            } else {
                $result = [
                    'status' => 'Error',
                    'response' => __('department_error')
                ];
            }
        }else{
            throw new NotFoundException();
        }
        $this->set(compact('result'));
        $this->set('_serialize', ['result']);
    }

    /**
     * Delete method
     *
     * @param string|null $id Department id.
     * @return \Cake\Network\Response|null Redirects to index.
     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
     */
    public function delete()
    {

        $this->request->allowMethod('ajax');
        $this->request->allowMethod(['get']);
        if(!$this->request->query('id')){
            throw new NotFoundException();
        }
        $department = $this->Departments->query()->update()->set([
            'del_flg' => true
        ])->where(['id' => $this->request->query('id')])
        ->execute();
        if ($department) {
            $result = [
                'status' => 'Success',
                'response' => __('department_del_success')
            ];
        } else {
            $result = [
                'status' => 'Error',
                'response' => __('department_del_error')
            ];
        }
        $this->set(compact('result'));
        $this->set('_serialize', ['result']);
//        return $this->redirect(['action' => 'index']);
    }
}
