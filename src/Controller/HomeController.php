<?php
namespace App\Controller;

use App\Controller\AppController;
use App\Model\Entity\Account;
use Cake\Controller\Component\AuthComponent;
use Cake\Event\Event;
use Cake\ORM\TableRegistry;

/**
 * Login Controller
 *
 * @property \App\Model\Table\LoginTable $Login
 */
class HomeController extends AppController
{
    private $Account;
    public function  initialize()
    {

        $this->Account = TableRegistry::get('Accounts');
        parent::initialize(); // TODO: Change the autogenerated stub

    }

    public function beforeFilter(Event $event)
    {
//        echo 123;exit;
        parent::beforeFilter($event);
        // Allow users to register and logout.
        // You should not add the "login" action to allow list. Doing so would
        // cause problems with normal functioning of AuthComponent.
        $this->Auth->allow(['login', 'logout','register']);
    }

    /**
     * Login method
     *
     *
     */
    public function login()
    {
        $this->viewBuilder()->layout('login');
        if ($this->request->is('post')) {

            $user = $this->Auth->identify();
            if ($user) {
                $this->Auth->setUser($user);
//                echo 'ok';exit;
                if ($this->Auth->authenticationProvider()->needsPasswordRehash()) {
                    $user = $this->Account->get($this->Auth->user('id'));
                    $user->password = $this->request->data('password');
                    $this->Account->save($user);
                }
                return $this->redirect($this->Auth->redirectUrl());
            }
            $this->Flash->error(__('Invalid username or password, try again'));
        }
    }
    public function index()
    {
//    echo 123;exit;
//        $this->render('/Amin/Layout/default');
    }





    /**
     * Logout method
     *
     *
     */
    public function logout()
    {
        return $this->redirect($this->Auth->logout());
    }

    /**
     * Logout method
     *
     *
     */
    public function register()
    {
        $user = $this->Account->newEntity();
        if ($this->request->is('post')) {
            $user = $this->Account->patchEntity($user, $this->request->data);
            if ($this->Account->save($user)) {
                $this->Flash->success(__('The user has been saved.'));
                return $this->redirect(['action' => 'login']);
            }
            $this->Flash->error(__('Unable to add the user.'));
        }
        $this->set('user', $user);
    }

}
