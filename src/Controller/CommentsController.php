<?php
namespace App\Controller;
use Cake\Routing\Router;

/**
 * Comments Controller
 *
 * @property \App\Model\Table\CommentsTable $Comments
 */
class CommentsController extends AuthMasterController
{

    /**
     * Index method
     *
     * @return \Cake\Network\Response|null
     */
    public $paginate = [
        'order' => [
            'Comments.title' => 'desc'
        ],
        'conditions' =>['del_flg' => false]
    ];
    public function  initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    public function index()
    {

    }
    public function getComment(){
        $this->request->allowMethod('ajax');
        $this->viewBuilder()->className('AdminTheme.Ajax');
        $id = $this->request->query('request_id');
        if (!$id) {
            throw new NotFoundException();
        }
        $arrComment =  $this->Comments->find()->contain(['Profiles','Users'])->where(['req_id' => $id])->order(['Comments.id' => 'DESC'])->all()->toArray();
        foreach ($arrComment as $key => $item){
            $arrComment[$key]->username = isset($item->profile->first_name) ? $item->profile->last_name.' '.$item->profile->first_name : $item->user->username;
            unset($arrComment[$key]->user);
        }
        $this->set(compact('arrComment'));
        $this->set('_serialize', 'arrComment');
    }
    public function addAjax(){
        $this->request->allowMethod('ajax');
        $this->viewBuilder()->className('AdminTheme.Ajax');
        $commentE = $this->Comments->newEntity();
        if (!$this->request->is('post') || $this->request->data['mod'] !=='return' || empty($this->request->data['request_id'])|| empty($this->request->data['txtComment'])) {
            throw new NotFoundException();
        }
        $this->request->data['role_id'] =$this->user->role[0]->id;
        $this->request->data['from_user_id'] =$this->user->id;
        $commentE = $this->Comments->patchEntity($commentE, $this->request->data);
        $commentDetail = $this->Comments->save($commentE);
        $result = [];
        if ($commentDetail) {
            $commentDetail->username = $this->user->profile->last_name . ' ' .$this->user->profile->first_name;
            $result = [
                'status' => 'Success',
                'response' => $commentDetail
            ];
        } else {
            $result = [
                'status' => 'Error',
                'response' => __('comment_error')
            ];
        }
        $arrUser =  $this->Comments->find('list',['fields'=>['id','from_user_id']])->where(['req_id' => (int)$commentDetail->req_id,'from_user_id <>'=> $this->user->id])->group(['from_user_id'])->toArray();
        if(!empty($arrUser)){
            $this->pushNotification(array_values($arrUser),$commentDetail,false);

        }
        $this->set(compact('result'));
        $this->set('_serialize', 'result');
    }





    private function pushNotification($user , $commentDetail, $is_approve = true){
        $this->Notification->notify([
                'users' => $user,
                'template' => ['returnRequest'],
                'is_approve' => $is_approve,
                'message' => [
                    'username' => $this->user->profile->first_name . ' ' .$this->user->profile->last_name,
                    'title' => '',
                    'category' => 'Request',
                    'link' => Router::url(array('controller'=>'Requests', 'action'=>'preview', $commentDetail->req_id),true)
                ]
            ]);
    }

}