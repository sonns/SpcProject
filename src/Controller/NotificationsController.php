<?php
namespace App\Controller;
use Aura\Intl\Exception;
use Notification\Utility\NotificationManager;

use Cake\Core\Configure;
use Cake\Network\Exception\NotFoundException;
use Cake\View\Exception\MissingTemplateException;
use Cake\Event\Event;
use ElephantIO\Client as Elephant;
use ElephantIO\Engine\SocketIO\Version1X;
use ElephantIO\Exception\ServerConnectionFailureException;
/**
 * Roles Controller
 *
 * @property \App\Model\Table\RolesTable $Roles
 */
class NotificationsController extends AuthMasterController
{
    protected $_pushNotification;
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->loadComponent('Notification.Notification');
        $this->_pushNotification = $this->_initPushNotification();
    }

    /**
     * Index method
     *
     * @return \Cake\Network\Response|null
     */
    public function index()
    {

        $notificationManager = NotificationManager::instance();
        $notificationManager->addTemplate(
            'newBlog', [
                'title' => 'New blog by :username',
                'body' => ':username has posted a new blog named :name'
            ]
        );
//
//        $notificationManager->notify([
//            'users' => [1, 2, 3, 4, 5],
//            'recipientLists' => ['administrators'],
//            'template' => 'newBlog',
//            'vars' => [
//                'username' => 'Bob Mulder',
//                'name' => 'My great new blogpost'
//            ]
//        ]);

         $alert = $this->Notification->getNotifications();
        echo '<pre>';
        print_r($alert);
        echo '</pre>';
        exit;
        $this->Notification->getNotifications;
        $notificationManager->addTemplate('newBlog', [
            'title' => 'New blog by :username',
            'body' => ':username has posted a new blog named :name'
        ]);
    }


    private function _initPushNotification(){
        $notification = new Elephant(new Version1X('http://localhost:5000'));
        return $notification;
    }
    protected function pushNotification($data){
        try {
            $this->_pushNotification->initialize();
            $this->_pushNotification->emit('cake_event',[ 'arg' => $data ]);
            $this->_pushNotification->close();
        } catch (ServerConnectionFailureException $e) {
            //Write log
        }
    }
}
