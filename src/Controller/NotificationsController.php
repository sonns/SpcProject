<?php
namespace App\Controller;
use Aura\Intl\Exception;
use Cake\Network\Exception\BadRequestException;
use Cake\ORM\TableRegistry;
use Notification\Utility\NotificationManager;

use Cake\Core\Configure;
use Cake\Network\Exception\NotFoundException;
use Cake\View\Exception\MissingTemplateException;
use Cake\Event\Event;
use ElephantIO\Client as Elephant;
use ElephantIO\Engine\SocketIO\Version1X;
use ElephantIO\Exception\ServerConnectionFailureException;
/**
 * Roles Controller
 *
 * @property \App\Model\Table\RolesTable $Roles
 */
class NotificationsController extends AuthMasterController
{
    protected $_pushNotification;
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
//        $this->loadComponent('Notification.Notification');
        $this->_pushNotification = $this->_initPushNotification();
    }

    public function getNotification(){
        $this->request->allowMethod('ajax');
        $notifier = TableRegistry::get('Notification.Notifications');
        if ($this->request->is('post')) {
            if(!isset($this->request->data['tracking_id'])){
                throw new BadRequestException();
            }else{
                $notification = [
                    'status'=> 'Success',
                    'mode'=>200,
                    'response'=>  $notifier->find()->where([
                        'user_id'=>$this->user->id,
                        'tracking_id'=> $this->request->params['tracking_id']
                    ])->toArray()
                ];
                $this->set(compact('notification'));
                $this->set('_serialize', ['notification']);
            }
        }else{
            throw new BadRequestException();
        }
    }
    /**
     * Index method
     *
     * @return \Cake\Network\Response|null
     */
    public function index()
    {

//        $notificationManager = NotificationManager::instance();
//        $notificationManager->addTemplate(
//            'newBlog', [
//                'title' => 'New blog by :username',
//                'body' => ':username has posted a new blog named :name'
//            ]
//        );
//
//        $notificationManager->notify([
//            'users' => [1, 2, 3, 4, 5],
//            'recipientLists' => ['administrators'],
//            'template' => 'newBlog',
//            'vars' => [
//                'username' => 'Bob Mulder',
//                'name' => 'My great new blogpost'
//            ]
//        ]);
        $notifier = TableRegistry::get('Notification.Notifications');
        $result =  $notifier->find()->where([
            'user_id'=>3,
            'tracking_id'=> ''
        ])->toArray();

//         $alert = $this->Notification->getNotifications();
        echo '<pre>';
        print_r($result);
        echo '</pre>';
        exit;
        $this->Notification->getNotifications;
        $notificationManager->addTemplate('newBlog', [
            'title' => 'New blog by :username',
            'body' => ':username has posted a new blog named :name'
        ]);
    }


    private function _initPushNotification(){
        $notification = new Elephant(new Version1X('http://localhost:5000'));
        return $notification;
    }
    protected function pushNotification($data){
        try {
            $this->_pushNotification->initialize();
            $this->_pushNotification->emit('cake_event',[ 'arg' => $data ]);
            $this->_pushNotification->close();
        } catch (ServerConnectionFailureException $e) {
            //Write log
        }
    }
}
