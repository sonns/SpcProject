<?php
namespace App\Controller;
use Aura\Intl\Exception;
use Cake\Network\Exception\BadRequestException;
use Cake\ORM\TableRegistry;
use Notification\Utility\NotificationManager;

use Cake\Core\Configure;
use Cake\Network\Exception\NotFoundException;
use Cake\View\Exception\MissingTemplateException;
use Cake\Event\Event;
use ElephantIO\Client as Elephant;
use ElephantIO\Engine\SocketIO\Version1X;
use ElephantIO\Exception\ServerConnectionFailureException;
/**
 * Roles Controller
 *
 * @property \App\Model\Table\RolesTable $Roles
 */
class NotificationsController extends AuthMasterController
{
    protected $_pushNotification;
    protected $_notifier;
    public $paginate = [
        'order' => [
            'Notifications.id' => 'desc'
        ]
    ];
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->_notifier = TableRegistry::get('Notification.Notifications');
    }

    public function getNotification(){
        $this->request->allowMethod('ajax');
        $notifier = TableRegistry::get('Notification.Notifications');
        if ($this->request->is('post')) {


            if(!isset($this->request->data['tracking_id'])){
                throw new BadRequestException();
            }else{
                $noti = $this->Notification->getNotifications($this->user->id,$this->request->data['tracking_id']);
                $notification = [
                    'status'=> 'Success',
                    'mode'=>200,
                    'response'=>$noti[0]
                ];
                $this->set(compact('notification'));
                $this->set('_serialize', ['notification']);
            }
        }else{
            throw new BadRequestException();
        }
    }
    /**
     * Index metpÃºhod
     *
     * @return \Cake\Network\Response|null
     */
    public function index()
    {
        $notifiers = $this->paginate($this->_notifier);
        $this->set(compact('notifiers'));
        $this->set('_serialize', ['notifiers']);
    }


    private function _initPushNotification(){
        $notification = new Elephant(new Version1X('http://localhost:5000'));
        return $notification;
    }
    protected function pushNotification($data){
        try {
            $this->_pushNotification->initialize();
            $this->_pushNotification->emit('cake_event',[ 'arg' => $data ]);
            $this->_pushNotification->close();
        } catch (ServerConnectionFailureException $e) {
            //Write log
        }
    }
}
